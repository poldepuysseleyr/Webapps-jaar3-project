best practices nodig voor programmeurs om elkaars code te begrijpen
je moet weten hoe de taal werkt en hoe ze code erin definieren.


//javascript = vuile code

var x : {
	property:15,
	method: function(){
		return 20;
	}
};

x.somethingnew = function(){
	
}

x.somethingnew();

var flexibel = function(money,time,people,test){
	
}

flexibel(10);
flexibel(15,200);
flexibel(15,600,[{name:'Rudy'}]);


//tools om te helpen
lint = kijkt code na voor compilen om te zorgen dat je je aan enkele standaarden houdt. 

npm install -g eslint voor in npm 
npm install -g eslint-plugin-angular
npm intall -g eslint-config-angular

//in flapper news zelf installeren als plugins op atom niet werken
npm install -D eslint
npm install -D eslint-plugin-angular
npm intall -D eslint-config-angular


in flapper news: 
file met .eslintrc introduceren 

op atom linter-eslint installeren package 
en linter gewoon installeren

//rariteiten javascript om beter te begrijpen

1.om aan te tonen dat je rap een waarde kan overschrijven binnen dezelfde functie
function getValue(){      
	var value;
	value = 5;
	//1
	if(true){
	value = "yes";
	//2
	console.log(value);
	}else {
		//3
	}
	console.log(value);

}
getValue();


2. Om aan te tonen dat je this moet binden aan een variabele omdat die anders bij bv var x = p.greet() niet meer gebonden is aan het object, je bent this kwijt (vooral voor javascript 5)
var x : {
	property:15,
	method: function(){
		return 20;
	}
};
function Person(theName){
	var self = this;
	
	self.name = theName;
	self.greet = function(){
		console.log("Hi" + self.name);
	}
}
var p = new Person("Rudy");
var q = new Person("John");
p.greet();
q.greet();

var a = p;
a.greet();
var x = p.greet; 
x();


//best practices voor angularJS bekijk papa john github 













